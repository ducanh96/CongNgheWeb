@model ShoppingMobile.Models.ModelDB.DienThoai

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<script src="~/Content/ckeditor/ckeditor.js"></script>
<h2>Create</h2>

@using (Html.BeginForm("Create","DienThoais",FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>DienThoai</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TenDienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenDienThoai, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.TenDienThoai, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RAM_ROM, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RAM_ROM, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.RAM_ROM, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Camera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Camera, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.Camera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TrangThai)
                    @Html.ValidationMessageFor(model => model.TrangThai, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoLuong, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManHinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManHinh, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.ManHinh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TSKT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TSKT, new { htmlAttributes = new { @class = "form-control1" } })
                @Html.ValidationMessageFor(model => model.TSKT, "", new { @class = "text-danger" })
                <script>CKEDITOR.replace("TSKT")</script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnhDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="#" width="195" height="243" id="blah" />
                <input type="file" name="uploadFile" class="form-control1" onchange="readURL(this);"/>
                @Html.ValidationMessageFor(model => model.AnhDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaHDT, "MaHDT", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaHDT", null, htmlAttributes: new { @class = "form-control1" })
                @Html.ValidationMessageFor(model => model.MaHDT, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
function readURL(input) {
  if (input.files && input.files[0]) {
    var reader = new FileReader();
    reader.onload = function (e) {
        $('#blah')
          .attr('src', e.target.result);

    };
    reader.readAsDataURL(input.files[0]);
  }
}
</script>